[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "QueryDict",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "products.cart",
        "description": "products.cart",
        "isExtraImport": true,
        "detail": "products.cart",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "products.cart",
        "description": "products.cart",
        "isExtraImport": true,
        "detail": "products.cart",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "IndexView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductListView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductDetailView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ContactView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "Error404View",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "CartView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "TestimonialView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "CheckoutView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "SearchProductView",
        "importPath": "products.views",
        "description": "products.views",
        "isExtraImport": true,
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "CategoryDetailView",
        "importPath": "categories.views",
        "description": "categories.views",
        "isExtraImport": true,
        "detail": "categories.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.template.defaultfilters",
        "description": "django.template.defaultfilters",
        "isExtraImport": true,
        "detail": "django.template.defaultfilters",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "commerce.authentication.apps",
        "description": "commerce.authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authentication'",
        "detail": "commerce.authentication.apps",
        "documentation": {}
    },
    {
        "label": "CartsConfig",
        "kind": 6,
        "importPath": "commerce.carts.apps",
        "description": "commerce.carts.apps",
        "peekOfCode": "class CartsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'carts'",
        "detail": "commerce.carts.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "commerce.carts.cart",
        "description": "commerce.carts.cart",
        "peekOfCode": "class Cart():\n    def __init__(self, request):\n        self.session = request.session\n        cart = self.session.get('session-key', {})\n        if 'session-key' not in self.session:\n            cart = self.session['session-key'] = {}\n        self.cart = cart\n    def add(self, product):\n        product_id = str(product.id)\n        if product_id in self.cart:",
        "detail": "commerce.carts.cart",
        "documentation": {}
    },
    {
        "label": "CartView",
        "kind": 6,
        "importPath": "commerce.carts.views",
        "description": "commerce.carts.views",
        "peekOfCode": "class CartView(View):\n    template_name = \"products/cart.html\"\n    def get(self, request, *args, **kwargs):\n        cart = request.session.get('session-key')\n        products = []\n        for product_id, product_data in cart.items():\n            products.append(product_data)\n        return render(request, self.template_name, context={'products': products})\n    def post(self, request, *args, **kwargs):\n        cart = Cart(request)",
        "detail": "commerce.carts.views",
        "documentation": {}
    },
    {
        "label": "CategoriesConfig",
        "kind": 6,
        "importPath": "commerce.categories.apps",
        "description": "commerce.categories.apps",
        "peekOfCode": "class CategoriesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'categories'",
        "detail": "commerce.categories.apps",
        "documentation": {}
    },
    {
        "label": "CategoryDetailView",
        "kind": 6,
        "importPath": "commerce.categories.views",
        "description": "commerce.categories.views",
        "peekOfCode": "class CategoryDetailView(ListView):\n    template_name = \"products/list_category_product.html\"\n    context_object_name = 'products'  # Le nom de la variable passée au template\n    def get_queryset(self):\n        # Récupérer la catégorie à partir de l'URL\n        category = self.kwargs['category']\n        # Filtrer les produits par la catégorie sélectionnée\n        return Product.objects.filter(category__slug=category)\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)",
        "detail": "commerce.categories.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "commerce.commerce.asgi",
        "description": "commerce.commerce.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "commerce.commerce.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-(h*y5_j=_c4kuqx754#+r214l*9)8&9g_xvsy@l6v9=*zjbrc^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['0.0.0.0',]\nINTERNAL_IPS = [\n    # ...",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-(h*y5_j=_c4kuqx754#+r214l*9)8&9g_xvsy@l6v9=*zjbrc^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['0.0.0.0',]\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    \"0.0.0.0\",\n    # ...\n]",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['0.0.0.0',]\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    \"0.0.0.0\",\n    # ...\n]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['0.0.0.0',]\nINTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    \"0.0.0.0\",\n    # ...\n]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    \"0.0.0.0\",\n    # ...\n]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'products',\n    'authentication',\n    \"debug_toolbar\",",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n]",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "ROOT_URLCONF = 'commerce.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "WSGI_APPLICATION = 'commerce.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = '/media/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = '/media/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = '/media/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = '/media/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nMEDIA_URL = '/media/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "commerce.commerce.settings",
        "description": "commerce.commerce.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "commerce.commerce.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "commerce.commerce.urls",
        "description": "commerce.commerce.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path(\"\", IndexView.as_view(), name=\"index\"),\n    path(\"<slug:category>\", IndexView.as_view(), name=\"index\"),\n    path(\"contact/\", ContactView.as_view(), name=\"contact\"),\n    path(\"search/\", SearchProductView.as_view(), name=\"search\"),\n    path(\"cart/\", CartView.as_view(), name=\"cart\"),\n    path(\"checkout/\", CheckoutView.as_view(), name=\"checkout\"),\n    path(\"testimonial/\", TestimonialView.as_view(), name=\"testimonial\"),\n    path(\"404/\", Error404View.as_view(), name=\"error-404\"),",
        "detail": "commerce.commerce.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "commerce.commerce.wsgi",
        "description": "commerce.commerce.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "commerce.commerce.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commerce.products.migrations.0001_initial",
        "description": "commerce.products.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=255)),",
        "detail": "commerce.products.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commerce.products.migrations.0002_product_alter_category_options_alter_category_slug",
        "description": "commerce.products.migrations.0002_product_alter_category_options_alter_category_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Product',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=255)),",
        "detail": "commerce.products.migrations.0002_product_alter_category_options_alter_category_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commerce.products.migrations.0003_product_category",
        "description": "commerce.products.migrations.0003_product_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0002_product_alter_category_options_alter_category_slug'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='category',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category'),\n        ),",
        "detail": "commerce.products.migrations.0003_product_category",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commerce.products.migrations.0004_alter_product_options",
        "description": "commerce.products.migrations.0004_alter_product_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0003_product_category'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='product',\n            options={'ordering': ['name'], 'verbose_name_plural': 'Products'},\n        ),\n    ]",
        "detail": "commerce.products.migrations.0004_alter_product_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commerce.products.migrations.0005_alter_product_type",
        "description": "commerce.products.migrations.0005_alter_product_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0004_alter_product_options'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='type',\n            field=models.CharField(blank=True, choices=[('OR', 'Organic'), ('FR', 'Fresh'), ('SA', 'Sales'), ('Di', 'Discount'), ('Ex', 'Expired'), ('Ot', 'Other'), ('Un', 'Unknown')], max_length=255, null=True),\n        ),",
        "detail": "commerce.products.migrations.0005_alter_product_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "commerce.products.migrations.0006_alter_product_type",
        "description": "commerce.products.migrations.0006_alter_product_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0005_alter_product_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='type',\n            field=models.CharField(blank=True, choices=[('Or', 'Organic'), ('Fa', 'Fresh'), ('Sa', 'Sales'), ('Di', 'Discount'), ('Ex', 'Expired'), ('Ot', 'Other'), ('Un', 'Unknown')], max_length=255, null=True),\n        ),",
        "detail": "commerce.products.migrations.0006_alter_product_type",
        "documentation": {}
    },
    {
        "label": "ProductsConfig",
        "kind": 6,
        "importPath": "commerce.products.apps",
        "description": "commerce.products.apps",
        "peekOfCode": "class ProductsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'products'",
        "detail": "commerce.products.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "commerce.products.cart",
        "description": "commerce.products.cart",
        "peekOfCode": "class Cart():\n    def __init__(self, request):\n        self.session = request.session\n        cart = self.session.get('session-key', {})\n        if 'session-key' not in self.session:\n            cart = self.session['session-key'] = {}\n        self.cart = cart\n    def add(self, product):\n        product_id = str(product.id)\n        if product_id in self.cart:",
        "detail": "commerce.products.cart",
        "documentation": {}
    },
    {
        "label": "cart",
        "kind": 2,
        "importPath": "commerce.products.context_processors",
        "description": "commerce.products.context_processors",
        "peekOfCode": "def cart(request):\n    return {'cart': Cart(request)}",
        "detail": "commerce.products.context_processors",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "commerce.products.models",
        "description": "commerce.products.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=255)\n    slug = models.CharField(max_length=255, blank=True, null=True)\n    def __str__(self):\n        return self.name\n    def save(self, *args, **kwargs):\n        self.slug = slugify(self.name.lower())\n        super(Category, self).save(*args, **kwargs)\n    class Meta:\n        ordering = [\"name\"]",
        "detail": "commerce.products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "commerce.products.models",
        "description": "commerce.products.models",
        "peekOfCode": "class Product(models.Model):\n    class TypeProduct(models.TextChoices):\n     # Actual value ↓      # ↓ Displayed on Django Admin\n        ORGANIC = 'Or', 'Organic'\n        FRESH = 'Fa', 'Fresh'\n        SALES = 'Sa', 'Sales'\n        DISCOUNT = 'Di', 'Discount'\n        EXPIRED = 'Ex', 'Expired'\n        OTHER = 'Ot', 'Other'\n        UNKNOWN = 'Un', 'Unknown'",
        "detail": "commerce.products.models",
        "documentation": {}
    },
    {
        "label": "IndexView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class IndexView(View):\n    template_name = \"products/index.html\"\n    context_object_name = 'products'\n    def get(self, request, *args, **kwargs):\n        products = Product.objects.order_by('-pk')\n        categories = Category.objects.order_by('name')[:4]\n        slug = request.GET.get('category')\n        if slug:\n            products = products.filter(category__slug=slug)\n        context = {\"categories\": categories, \"products\": products[:12]}",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "ContactView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class ContactView(View):\n    template_name = \"products/contact.html\"\n    def get(self, request, *args, **kwargs):\n        return render(request, self.template_name)\nclass CartView(View):\n    template_name = \"products/cart.html\"\n    def get(self, request, *args, **kwargs):\n        cart = request.session.get('session-key')\n        products = []\n        for product_id, product_data in cart.items():",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "CartView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class CartView(View):\n    template_name = \"products/cart.html\"\n    def get(self, request, *args, **kwargs):\n        cart = request.session.get('session-key')\n        products = []\n        for product_id, product_data in cart.items():\n            products.append(product_data)\n        context = {'products': products}\n        return render(request, self.template_name, context)\n    def post(self, request, *args, **kwargs):",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "Error404View",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class Error404View(View):\n    template_name = \"products/404.html\"\n    def get(self, request, *args, **kwargs):\n        return render(request, self.template_name)\nclass CheckoutView(View):\n    template_name = \"products/checkout.html\"\n    def get(self, request, *args, **kwargs):\n        return render(request, self.template_name)\nclass TestimonialView(View):\n    template_name = \"products/testimonial.html\"",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "CheckoutView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class CheckoutView(View):\n    template_name = \"products/checkout.html\"\n    def get(self, request, *args, **kwargs):\n        return render(request, self.template_name)\nclass TestimonialView(View):\n    template_name = \"products/testimonial.html\"\n    def get(self, request, *args, **kwargs):\n        return render(request, self.template_name)\nclass ProductListView(ListView):\n    template_name = \"products/list_product.html\"",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "TestimonialView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class TestimonialView(View):\n    template_name = \"products/testimonial.html\"\n    def get(self, request, *args, **kwargs):\n        return render(request, self.template_name)\nclass ProductListView(ListView):\n    template_name = \"products/list_product.html\"\n    context_object_name = 'products'\n    def get_queryset(self):\n        # Récupérer tous les produits\n        return Product.objects.all()[:9]",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "ProductListView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class ProductListView(ListView):\n    template_name = \"products/list_product.html\"\n    context_object_name = 'products'\n    def get_queryset(self):\n        # Récupérer tous les produits\n        return Product.objects.all()[:9]\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        # Ajouter la liste de catégories au contexte\n        context['categories'] = Category.objects.all()",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "ProductDetailView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class ProductDetailView(DetailView):\n    template_name = \"products/detail_product.html\"\n    context_object_name = 'product'\n    def get_queryset(self):\n        # Récupérer tous les produits\n        return Product.objects.filter(pk=self.kwargs['pk'])\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        # Ajouter la liste de catégories au contexte\n        context['categories'] = Category.objects.all()",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "SearchProductView",
        "kind": 6,
        "importPath": "commerce.products.views",
        "description": "commerce.products.views",
        "peekOfCode": "class SearchProductView(ListView):\n    def post(self, request, *args, **kwargs):\n        \"\"\"\n        This function is used to handle POST requests to the search view.\n        Parameters:\n            request (HttpRequest): The incoming request.\n        Returns:\n            HttpResponse: The response to the request.\n        \"\"\"\n        # Retrieve the search term",
        "detail": "commerce.products.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "commerce.manage",
        "description": "commerce.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'commerce.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "commerce.manage",
        "documentation": {}
    }
]